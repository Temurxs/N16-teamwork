1. JavaScript da 8 malumot turlari mavjud
    String
    Number
    Bigint
    Boolean
    Undefined
    Null
    Symbol
    Object

2. JavaScript da 3 xil usul bilan o'zgaruvchi ochish mumkin:
    1) var
    2) let
    3) const

3. while birinchi shartni tekshiradi, mos kelgandan keyin ishga tushadi.
    do... while esa, brinchi ishlaydi keyin shartni tekshiradi. (hech bolmaganda bir marta ishga tushadi)

4. Object methods:
    assign (target, source) --- ikkita objectlarni bir biriga ulashda yordam beradi.
    keys (object) --- object key larini alohida array ga olib chiqaradi.
    values (object) --- object valyu larini alohida array ga olib chiqaradi.
    freeze (obj) --- bu method object ni muzlatadi, ustida amal bajarishga, qo'shishga va o'chirishga ruxsat bermaydi.
    seal (obj) --- ustida amal qilsa boladi, lekin qo'shib va o'chirib bolmaydi.

5. Array methods:
    pop() --- array orqasidagi brinchi elementni olib tashlaydi.
    push() --- array orqasidan qo'shadi.
    shift() --- array dagi brinchi elementni ochiradi.
    unshift() --- array boshidan bitta element qo'shadi.
    map() --- berilgan shartga kora amal bajarib, o'sha array ni qaytaradi.
    length --- array ichida nechta element borligin ko'rsatadi.
    reverse() --- arrayni teskari qilib qaytaradi.
    join() --- arrayga qo'shadi.
    reduce() --- bunda acc bilan curr keladi, va arrayni qisqartirgan holda hisoblashga yordam beradi (misol uchun: bir biriga qo'shganda)
    some() --- agar birortaham element shartga jaob bersa, true qaytaradi, aks holda false.
    every() --- array dagi barcha element shartga t'g'ri kelsa true, aks holda false.

6. funksiya ---- bu malum bir vazifani bajaradigan va qayta qayta ishlatsa boladigan kod blogidir. 
    Asosiy 3 ta function bor:

    function declaration --- bu function hosting ga uchrashi bilan sjralib turadi.
    function expression --- Anonymous Function deb ham ataladi.
    arrow function --- agar kod bir qatorda bolsa, return qilish shart bo'lmaydi.

7. Pure function --- hardoim bir xil input ga birxil out output qaytaradi.
    Impure function --- bir cil input ga har xil output qaytarishi mumkin.

8. String methods:
    split("") --- string ichidagi harbir harifni ajratib, alohida string qaytaradi.
    indexOf("") --- nechanchi indexda turganini qaytaradi.
    charCodeAt() --- ASCI Table da gi raqamini qaytaradi.
    trim() --- oldidagi va orqadagi bosh joylarni o'chiradi.
    concat() --- birnecha string larni bir biriga ulashda ishlatilinadi.
    replace() --- qavs ichiga string da sozlar beriladi, o'zgartirish uchun.
    toUpperCase() --- string ichidagi barcha harflarni KATTA harflarga ozgartiradi.
    toLowerCase() --- string ichidagi barcha harflarni kichik harflarga ozgartiradi.

9. call, apply, bind ---- function ni object ga ulash uchun ishlatiladi.
    call --- shunchaki "string"  ichida yoziladi.
    apply --- [array] ga olinadi
    bind --- function qaytaradi shuning uchun oxirida () yozish kerak boladi, yoki oxirida unixam boshqa function larga oxshab ishlatvorishga tori keladi.

10. Agar faqat oddiy kalit va qiymatlar kerak bolsa, yani string yoki symbol bunda Object yertarli boladi.
    Agar ko'p turdagi ma'lumotlar kerak bo'lsa, bunda Map ishlatiladi.
        Asosiy farqlari:
            1) Object da key faqat string va symbol oladi --- map da num, obj, function, array va yana boshqa turdagi malumot turlarin oladi.
            2) Object odatda Map dan sekinroq ishlaydi.

11. OOP (Object-Oriented Programming) ---- bu ham bir object faqat yangilangan versiasi, yani class larni ishlatamiz
    OOP ni ustinlik tomonlari dan biri biz undan inheritance olsak boladi.

12. OOP da 4 ta tamoyillar bor:
        1) Encapsulation (Inkapsulyatsiya) ---Ma’lumotlarni yashirish va faqat kerakli joylardan foydalanish imkoniyatini beradi.
        2) Abstraction (Abstraktsiya) --- abstraktsiya orqali keraksiz tafsilotlarni yashiramiz yani user lar bilishi shart emas bolgan malumotlarni. 
        3) Inheritance (Meros olish) --- Bitta klassdan boshqa klassga key  valyu larni va metodlarni o‘tqazish uchun kerak boladi.
        4) Polymorphism (Polimorfizm) --- Bitta metod yoki funksiyaning turli obyektlarda har xil ishlashi.

13. typeof ham instenceof ham biz ga tekshirish uchun kerak. Farqlari:
    1) typeof primitive data type uchun, instenceof esa  Non-primitive malumot turlarin uchun (typeof ni Non-primitivelar uchun ham ishlatsa boladi, lekin aniq korsatmaydi, chunki object bilalan array farqiga bormaydi)
    2) typeof string / instenceof boolean qaytaradi.

14. Promise ---- asinxron operatsiyalarni boshqarish uchun ishlatiladi. U kelajakda yechim topadi yoki muvaffaqiyatsiz tugidi.Promise da 3 ta case bor. Bular:
        1) Pending (kutish holati) – natija hali tayyor emas
        2) Fulfilled (bajarildi) – muvaffaqiyatli bajarildi
        3) Rejected (rad etildi) – error beradi

15. Promise methods:
    then() --- promise muvaffaqiyatli bojarganda keyin resolve qiladi.
    catch() --- agar code error bersa, ushlashuchun.
    all() --- barcha promise lar bilan ishlash uchun kerak boladi.
    race() --- birinchi bo'lgan promise natijasini qaytaradi.
    resolve() --- bu return ga oxshab ishlaydi.
    reject() --- bu shunchaki otmen bervoradi pomisga.

16. Event Loop ---– bu asinxron kodni boshqarish mexanizmi. U Call Stack va Task Queue o‘rtasida ishlaydi.

17. CRUD ---- bu Create, Read, Update, Delete so‘zlarining bosh harflaridan tuzilgan asosiy ma’lumotlar bazasi operatsiyalari majmuasi.
        C - create - post
        R - read  -  get
        U - update - put
        D - delete - delete

18. DOM (Document Object Model) – bu veb-sahifaning tuzilishini daraxt ko'rinishida ifodalovchi obyektlar to'plami. Brauzer dagi HTML kodni JavaScript da turib boshqarish.

    DOM methods:

    getElementById(id) --- id bo'yicha element ni oladi.
    getElementByClassName(class) --- class boyicha element ni oladi.
    innerText --- object ichidagi elementlar matnini olish yoki o'zgartirish uchun ishlatiladi.
    innnerHTML --- bunda shunchaki text mas balki code, yoziladi va u ishlaydi.
    createElement() – HTML elementini yaratadi, lekin hali web ga qo'shmaydi.
    addEventListener – bu JavaScript-da events bilan ishlash uchun ishlatiladigan metod bo'lib, u HTML elementlariga event qo'shish imkonini beradi.